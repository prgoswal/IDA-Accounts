(function (n, t, i) { function e(t, i) { this.element = t; this.settings = n.extend({}, f, i); this._defaults = f; this._name = r; this.init() } function u(n) { return n.filename ? n.filename : "table2excel" } function o(n) { var t = /(\s+alt\s*=\s*"([^"]*)"|\s+alt\s*=\s*'([^']*)')/i; return n.replace(/<img[^>]*>/gi, function (n) { var i = t.exec(n); return i !== null && i.length >= 2 ? i[2] : "" }) } function s(n) { return n.replace(/<a[^>]*>|<\/a>/gi, "") } function h(n) { var t = /(\s+value\s*=\s*"([^"]*)"|\s+value\s*=\s*'([^']*)')/i; return n.replace(/<input[^>]*>|<\/input>/gi, function (n) { var i = t.exec(n); return i !== null && i.length >= 2 ? i[2] : "" }) } var r = "table2excel", f = { exclude: ".noExl", name: "Table2Excel" }; e.prototype = { init: function () { var t = this; t.template = { head: '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><meta http-equiv="content-type" content="application/vnd.ms-excel; charset=UTF-8"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets>', sheet: { head: "<x:ExcelWorksheet><x:Name>", tail: "<\/x:Name><x:WorksheetOptions><x:DisplayGridlines/><\/x:WorksheetOptions><\/x:ExcelWorksheet>" }, mid: "<\/x:ExcelWorksheets><\/x:ExcelWorkbook><\/xml><![endif]--><\/head><body>", table: { head: "<table>", tail: "<\/table>" }, foot: "<\/body><\/html>" }; t.tableRows = []; n(t.element).each(function (i, r) { var u = "", f = 0; n(r).find("tr").not(t.settings.exclude).each(function (i, r) { u += "<tr>"; n(r).find("th").not(t.settings.exclude).each(function (i, r) { var e = n(r).find(t.settings.exclude); u += e.length >= 1 ? "<td> <\/td>" : "<td>" + n(r).html() + "<\/td>"; f++ }); n(r).find("td").not(t.settings.exclude).each(function (i, r) { var f = n(r).find(t.settings.exclude); u += f.length >= 1 ? "<td> <\/td>" : "<td>" + n(r).html() + "<\/td>" }); u += "<\/tr>" }); t.settings.exclude_img && (u = o(u)); t.settings.exclude_links && (u = s(u)); t.settings.exclude_inputs && (u = h(u)); t.tableRows.push(u) }); t.tableToExcel(t.tableRows, t.settings.name, t.settings.sheetName) }, tableToExcel: function (r, f, e) { var o = this, s = "", h, l, c, a, v, y; if (o.format = function (n, t) { return n.replace(/{(\w+)}/g, function (n, i) { return t[i] }) }, e = typeof e == "undefined" ? "Sheet" : e, o.ctx = { worksheet: f || "Worksheet", table: r, sheetName: e }, s = o.template.head, n.isArray(r)) for (h in r) s += o.template.sheet.head + e + h + o.template.sheet.tail; if (s += o.template.mid, n.isArray(r)) for (h in r) s += o.template.table.head + "{table" + h + "}" + o.template.table.tail; s += o.template.foot; for (h in r) o.ctx["table" + h] = r[h]; return delete o.ctx.table, a =/*@cc_on!@*/!1 || !!i.documentMode, a ? typeof Blob != "undefined" ? (s = o.format(s, o.ctx), s = [s], v = new Blob(s, { type: "text/html" }), t.navigator.msSaveBlob(v, u(o.settings))) : (txtArea1.document.open("text/html", "replace"), txtArea1.document.write(o.format(s, o.ctx)), txtArea1.document.close(), txtArea1.focus(), sa = txtArea1.document.execCommand("SaveAs", !0, u(o.settings))) : (y = new Blob([o.format(s, o.ctx)], { type: "application/vnd.ms-excel" }), t.URL = t.URL || t.webkitURL, l = t.URL.createObjectURL(y), c = i.createElement("a"), c.download = u(o.settings), c.href = l, i.body.appendChild(c), c.click(), i.body.removeChild(c)), !0 } }; n.fn[r] = function (t) { var i = this; return i.each(function () { n.data(i, "plugin_" + r) || n.data(i, "plugin_" + r, new e(this, t)) }), i } })(jQuery, window, document);
//# sourceMappingURL=jquery.table2excel.min.js.map
